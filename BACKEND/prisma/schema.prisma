// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Déclaration des modèles

enum Role {
  UTILISATEUR_STANDARD
  ADMINISTRATEUR
}

model Utilisateur {
  id           Int       @id @default(autoincrement())
  nom          String
  postnom      String
  prenom       String
  email        String    @unique
  motDePasse   String
  adresse      String
  numeroTel    String
  dateNaissance DateTime
  role                Role               @default(UTILISATEUR_STANDARD)
  annonces     Annonce[]
  offres       Offre[]
  notifications Notification[]
  demandesValidation DemandeValidation[]
  encheres Enchere[]
}

model Annonce {
  id                 Int           @id @default(autoincrement())
  titre              String
  description        String
  typeBien           String
  surface            Float
  localisation       String
  prixInitial        Float
  proprietaire       Utilisateur   @relation(fields: [proprietaireId], references: [id])
  proprietaireId     Int
  images             Image[]
  encheres           Enchere[]
  demandesValidation DemandeValidation[]
}

model Enchere {
  id                Int        @id @default(autoincrement())
  montantEnchere    Float
  dateEnchere       DateTime
  utilisateur       Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId     Int
  annonce           Annonce    @relation(fields: [annonceId], references: [id])
  annonceId         Int
  offres            Offre[]
}

model Offre {
  id                  Int         @id @default(autoincrement())
  montantOffre        Float
  dateOffre           DateTime
  utilisateur         Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId       Int
  enchere             Enchere     @relation(fields: [enchereId], references: [id])
  enchereId           Int
  paiementsAcompte    PaiementsAcompte[]
}

model Image {
  id               Int       @id @default(autoincrement())
  lienImage        String
  annonce          Annonce   @relation(fields: [annonceId], references: [id])
  annonceId        Int
}

model Notification {
  id                 Int       @id @default(autoincrement())
  contenuNotification String
  dateNotification    DateTime
  utilisateur         Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId       Int
}

model DemandeValidation {
  id                 Int       @id @default(autoincrement())
  statutDemande      String
  dateDemande        DateTime
  utilisateur        Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId      Int
  annonce            Annonce @relation(fields: [annonceId], references: [id])
  annonceId          Int
}

model PaiementsAcompte {
  id              Int         @id @default(autoincrement())
  montantAcompte  Float
  datePaiement    DateTime
  offre           Offre       @relation(fields: [offreId], references: [id])
  offreId         Int
}
